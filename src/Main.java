
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JOptionPane;

public class Main extends javax.swing.JFrame {

    static Scanner in = new Scanner(System.in);
    static PC currentPC;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frameCrud = new javax.swing.JFrame();
        jpcrud = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        jpAgregarEsc = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtmask = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jthostname = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jtram = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jtcapalm = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btHDD = new javax.swing.JRadioButton();
        btSSD = new javax.swing.JRadioButton();
        btGraphics = new javax.swing.JCheckBox();
        btagregarEsc = new javax.swing.JButton();
        jtIP = new javax.swing.JTextField();
        AgregarLaptop = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jtIP2 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jtmask2 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jthostname2 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jtmarca = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtdefinicion = new javax.swing.JTextField();
        rgbbox = new javax.swing.JCheckBox();
        agregarLaptop = new javax.swing.JButton();
        jpListar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listPC = new javax.swing.JTextArea();
        jpEliminar = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jtEliminar = new javax.swing.JTextField();
        btEliminar = new javax.swing.JButton();
        crudSalir = new javax.swing.JButton();
        almacenamiento = new javax.swing.ButtonGroup();
        jfIngresarPC = new javax.swing.JFrame();
        jpIngresar = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jtPCIP = new javax.swing.JTextField();
        btingresar = new javax.swing.JButton();
        bgPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btcrud = new javax.swing.JButton();
        btingrese = new javax.swing.JButton();

        jpcrud.setBackground(new java.awt.Color(102, 102, 255));

        jLabel2.setBackground(new java.awt.Color(51, 51, 51));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("CRUD");

        tabs.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabsStateChanged(evt);
            }
        });

        jpAgregarEsc.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("IP");
        jpAgregarEsc.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 38, -1, -1));

        jLabel4.setText("Mask");
        jpAgregarEsc.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 105, -1, -1));
        jpAgregarEsc.add(jtmask, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 102, 146, -1));

        jLabel5.setText("Hostname");
        jpAgregarEsc.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 172, -1, -1));
        jpAgregarEsc.add(jthostname, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 169, 119, -1));

        jLabel9.setText("RAM");
        jpAgregarEsc.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 219, -1, -1));
        jpAgregarEsc.add(jtram, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 216, 119, -1));

        jLabel10.setText("Capacidad de almacenamiento");
        jpAgregarEsc.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 24, -1, -1));
        jpAgregarEsc.add(jtcapalm, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 66, 164, -1));

        jLabel11.setText("Tipo de almacenamiento: ");
        jpAgregarEsc.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 117, -1, -1));

        almacenamiento.add(btHDD);
        btHDD.setText("HDD");
        btHDD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btHDDActionPerformed(evt);
            }
        });
        jpAgregarEsc.add(btHDD, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 139, -1, -1));

        almacenamiento.add(btSSD);
        btSSD.setText("SSD");
        jpAgregarEsc.add(btSSD, new org.netbeans.lib.awtextra.AbsoluteConstraints(289, 139, -1, -1));

        btGraphics.setText("Tarjeta grafica");
        jpAgregarEsc.add(btGraphics, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 186, -1, -1));

        btagregarEsc.setBackground(new java.awt.Color(102, 255, 102));
        btagregarEsc.setText("Agregar");
        btagregarEsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btagregarEscActionPerformed(evt);
            }
        });
        jpAgregarEsc.add(btagregarEsc, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, -1, -1));
        jpAgregarEsc.add(jtIP, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 35, 146, -1));

        tabs.addTab("Agregar PC de Escritorio", jpAgregarEsc);

        jLabel12.setText("IP");

        jLabel13.setText("Mask");

        jLabel14.setText("Hostname");

        jLabel15.setText("Marca");

        jLabel6.setText("Definicion de pantalla");

        rgbbox.setText("Teclado con RGB");

        agregarLaptop.setBackground(new java.awt.Color(102, 255, 102));
        agregarLaptop.setText("Agregar");
        agregarLaptop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarLaptopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AgregarLaptopLayout = new javax.swing.GroupLayout(AgregarLaptop);
        AgregarLaptop.setLayout(AgregarLaptopLayout);
        AgregarLaptopLayout.setHorizontalGroup(
            AgregarLaptopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgregarLaptopLayout.createSequentialGroup()
                .addGroup(AgregarLaptopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AgregarLaptopLayout.createSequentialGroup()
                        .addGroup(AgregarLaptopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(AgregarLaptopLayout.createSequentialGroup()
                                .addGroup(AgregarLaptopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AgregarLaptopLayout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(jLabel12))
                                    .addGroup(AgregarLaptopLayout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel13)))
                                .addGap(19, 19, 19)
                                .addGroup(AgregarLaptopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtIP2, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                    .addComponent(jtmask2)))
                            .addGroup(AgregarLaptopLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(jthostname2, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(AgregarLaptopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AgregarLaptopLayout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(43, 43, 43)
                                .addComponent(jtmarca, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6)
                            .addComponent(rgbbox)
                            .addComponent(jtdefinicion, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(AgregarLaptopLayout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(agregarLaptop)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        AgregarLaptopLayout.setVerticalGroup(
            AgregarLaptopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgregarLaptopLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(AgregarLaptopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jtIP2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jtmarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(AgregarLaptopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AgregarLaptopLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(AgregarLaptopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jtmask2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarLaptopLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtdefinicion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)))
                .addGroup(AgregarLaptopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(AgregarLaptopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jthostname2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rgbbox)))
                .addGap(43, 43, 43)
                .addComponent(agregarLaptop)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        tabs.addTab("Agregar Laptop", AgregarLaptop);

        listPC.setColumns(20);
        listPC.setRows(5);
        jScrollPane1.setViewportView(listPC);

        javax.swing.GroupLayout jpListarLayout = new javax.swing.GroupLayout(jpListar);
        jpListar.setLayout(jpListarLayout);
        jpListarLayout.setHorizontalGroup(
            jpListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpListarLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jpListarLayout.setVerticalGroup(
            jpListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpListarLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        tabs.addTab("Listar", jpListar);

        jpEliminar.setMinimumSize(new java.awt.Dimension(423, 335));

        jLabel7.setText("Ingrese el indice de la PC a eliminar");

        btEliminar.setText("Eliminar");
        btEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpEliminarLayout = new javax.swing.GroupLayout(jpEliminar);
        jpEliminar.setLayout(jpEliminarLayout);
        jpEliminarLayout.setHorizontalGroup(
            jpEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEliminarLayout.createSequentialGroup()
                .addContainerGap(120, Short.MAX_VALUE)
                .addGroup(jpEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpEliminarLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(117, 117, 117))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpEliminarLayout.createSequentialGroup()
                        .addComponent(jtEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpEliminarLayout.createSequentialGroup()
                        .addComponent(btEliminar)
                        .addGap(161, 161, 161))))
        );
        jpEliminarLayout.setVerticalGroup(
            jpEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEliminarLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel7)
                .addGap(37, 37, 37)
                .addComponent(jtEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(btEliminar)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        tabs.addTab("Eliminar", jpEliminar);

        crudSalir.setBackground(new java.awt.Color(255, 51, 51));
        crudSalir.setText("Salir");
        crudSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crudSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpcrudLayout = new javax.swing.GroupLayout(jpcrud);
        jpcrud.setLayout(jpcrudLayout);
        jpcrudLayout.setHorizontalGroup(
            jpcrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpcrudLayout.createSequentialGroup()
                .addGroup(jpcrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpcrudLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(crudSalir))
                    .addGroup(jpcrudLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jpcrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 126, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jpcrudLayout.setVerticalGroup(
            jpcrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpcrudLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 322, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(crudSalir)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout frameCrudLayout = new javax.swing.GroupLayout(frameCrud.getContentPane());
        frameCrud.getContentPane().setLayout(frameCrudLayout);
        frameCrudLayout.setHorizontalGroup(
            frameCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameCrudLayout.createSequentialGroup()
                .addComponent(jpcrud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        frameCrudLayout.setVerticalGroup(
            frameCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpcrud, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jpIngresar.setBackground(new java.awt.Color(102, 102, 255));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("Ingrese el IP de la PC a ingresar: ");

        btingresar.setBackground(new java.awt.Color(102, 255, 102));
        btingresar.setText("Ingresar");
        btingresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btingresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpIngresarLayout = new javax.swing.GroupLayout(jpIngresar);
        jpIngresar.setLayout(jpIngresarLayout);
        jpIngresarLayout.setHorizontalGroup(
            jpIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpIngresarLayout.createSequentialGroup()
                .addGroup(jpIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpIngresarLayout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(jpIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtPCIP)))
                    .addGroup(jpIngresarLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(btingresar)))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        jpIngresarLayout.setVerticalGroup(
            jpIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpIngresarLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel8)
                .addGap(40, 40, 40)
                .addComponent(jtPCIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(btingresar)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jfIngresarPCLayout = new javax.swing.GroupLayout(jfIngresarPC.getContentPane());
        jfIngresarPC.getContentPane().setLayout(jfIngresarPCLayout);
        jfIngresarPCLayout.setHorizontalGroup(
            jfIngresarPCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpIngresar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jfIngresarPCLayout.setVerticalGroup(
            jfIngresarPCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpIngresar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        bgPanel.setBackground(new java.awt.Color(102, 102, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Menu Principal");

        btcrud.setText("CRUD PC");
        btcrud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btcrudActionPerformed(evt);
            }
        });

        btingrese.setText("Ingresar a PC");
        btingrese.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btingreseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bgPanelLayout = new javax.swing.GroupLayout(bgPanel);
        bgPanel.setLayout(bgPanelLayout);
        bgPanelLayout.setHorizontalGroup(
            bgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgPanelLayout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addGroup(bgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btcrud)
                    .addComponent(btingrese)
                    .addComponent(jLabel1))
                .addContainerGap(139, Short.MAX_VALUE))
        );
        bgPanelLayout.setVerticalGroup(
            bgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgPanelLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addComponent(btcrud)
                .addGap(51, 51, 51)
                .addComponent(btingrese)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btcrudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btcrudActionPerformed
        frameCrud.setVisible(true);
        frameCrud.pack();
    }//GEN-LAST:event_btcrudActionPerformed

    private void crudSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crudSalirActionPerformed
        frameCrud.setVisible(false);
    }//GEN-LAST:event_crudSalirActionPerformed

    private void btHDDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHDDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btHDDActionPerformed

    private void btagregarEscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btagregarEscActionPerformed
        String ip = "";
        if(validar(jtIP.getText())){
             ip = jtIP.getText();
        }else{
            JOptionPane.showMessageDialog(this, "Valor no valido");
        }
        
        String mask = "";
        if(validar(jtmask.getText())){
            mask = jtmask.getText();
        }else{
            JOptionPane.showMessageDialog(this, "Valor no valido");
        }
        String host = jthostname.getText();
        String ram = jtram.getText();
        String capAlm = jtcapalm.getText();
        String tipo = "";
        if (btHDD.isSelected()) {
            tipo = "HDD";
        } else if (btSSD.isSelected()) {
            tipo = "SSD";
        }
        boolean tarjeta = btGraphics.isSelected();

        PC_Escritorio pc = new PC_Escritorio(ram, capAlm, tipo, tarjeta, ip, mask, host);
        computadoras.add(pc);

        jtIP.setText("");
        jtmask.setText("");
        jthostname.setText("");
        jtram.setText("");
        jtcapalm.setText("");
    }//GEN-LAST:event_btagregarEscActionPerformed

    private void agregarLaptopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarLaptopActionPerformed
        String ip = "";
        if(validar(jtIP2.getText())){
            ip = jtIP2.getText();
        }else{
            JOptionPane.showMessageDialog(this, "Valor no valido");
        }
        
        String mask = "";
        if(validar(jtmask2.getText())){
            mask = jtmask2.getText();
        }else{
            JOptionPane.showMessageDialog(this, "Valor no valido");
        }
        
        String host = jthostname2.getText();
        String marca = jtmarca.getText();
        String def = jtdefinicion.getText();
        boolean rgb = rgbbox.isSelected();

        Laptop laptop = new Laptop(marca, def, rgb, ip, mask, host);
        computadoras.add(laptop);

        jtIP2.setText("");
        jtmask2.setText("");
        jthostname2.setText("");
        jtmarca.setText("");
        jtdefinicion.setText("");
    }//GEN-LAST:event_agregarLaptopActionPerformed

    private void tabsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabsStateChanged
        if (tabs.getSelectedIndex() == 2) {
            listPC.setText("");
            for (PC c : computadoras) {
                listPC.append("" + computadoras.indexOf(c) + ".- " + c + "\n");
            }
        }
    }//GEN-LAST:event_tabsStateChanged

    private void btEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEliminarActionPerformed
        if (esNumero(jtEliminar.getText())) {
            if ((Integer.parseInt(jtEliminar.getText())) >= 0 && (Integer.parseInt(jtEliminar.getText())) < computadoras.size()) {
                computadoras.remove((Integer.parseInt(jtEliminar.getText())));
            } else {
                System.out.println("No se encontro ningun");
            }
        }
    }//GEN-LAST:event_btEliminarActionPerformed

    private void btingreseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btingreseActionPerformed
        jfIngresarPC.setVisible(true);
        jfIngresarPC.pack();

    }//GEN-LAST:event_btingreseActionPerformed

    private void btingresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btingresarActionPerformed
        String ip = jtPCIP.getText();
        for (PC c : computadoras) {
            if (c.getIp().equals(ip)) {
                currentPC = c;
                setVisible(false);
                jfIngresarPC.setVisible(false);
                console();
            } else {
                JOptionPane.showMessageDialog(this, "PC no existente");
            }
        }
    }//GEN-LAST:event_btingresarActionPerformed

    public void console() {
        String command = "";
        do {
            System.out.print("\n" + currentPC.getHostname() + "#");
            command = in.nextLine();
            if (command.equals("show")) {
                showInfo();
            } else if (command.equals("exit")) {
                setVisible(true);
            }else{
                String[] comArray = command.split("_");
                if(comArray[0].equals("ping")){
                    ping(comArray[1]);
                }else{
                    
                }
                
            }
        } while (!command.equals("exit"));

    }

    public void ping(String ip_dest) {
        System.out.println("\nPinging to: " + ip_dest + " with 32 bits of data");
        PC dest = new PC();
        int contIPdg = 0;
        boolean first3isEqual = true;
        boolean sameIP = false;
        boolean exists = false;
        for (PC c : computadoras) {
            if(c.getIp().equals(ip_dest)){
                exists = true;
                dest = c;
            }
        }
        
        String[] ipdest = ip_dest.split("\\.");
        String[] ipactual = currentPC.getIp().split("\\.");
        int lastIPdest = Integer.parseInt(ipdest[3]);
        int lastIPact = Integer.parseInt(ipactual[3]);
        
        
        for (int i = 0; i < 3; i++) {
            if(!ipdest[i].equals(ipactual[i])){
                first3isEqual = false;
            }
        }
        
        String[] StrDestMask = dest.getMask().split("\\.");
        int destMask = Integer.parseInt(StrDestMask[3]);
        
        
        
        if(first3isEqual){
            if(destMask == 192 || destMask == 224 || destMask == 240 ||
                    destMask == 248 || destMask == 252 || destMask == 254 || destMask == 255){
                int binDestMask = decAbin(destMask);
                int cont1 = 0;
                
                String binDestMaskStr = Integer.toString(binDestMask);
                
                for (int i = 0; i < binDestMaskStr.length(); i++) {
                    char car = binDestMaskStr.charAt(i);
                    if(car == '1'){
                        cont1 ++;
                    }
                }
                
                int binlastIPdest = decAbin(lastIPdest);
                String binlastIPdestStr = Integer.toString(binlastIPdest);
                int binlastIPact = decAbin(lastIPact);
                String binlastIPactStr = Integer.toString(binlastIPact);
                
                for (int i = 0; i < cont1; i++) {
                    char carDest = binlastIPdestStr.charAt(i);
                    char carAct = binlastIPactStr.charAt(i);
                    
                    if(carDest != carAct){
                        contIPdg++;
                    }
                }
                
                //exitoso
                if(contIPdg == 0){
                    System.out.println("Reply from " + ip_dest + ": bytes-32 time-37ms TTL=46" + "\n"
                    + "Reply from " + ip_dest + ": bytes-32 time-37ms TTL=46" + "\n"
                    + "Reply from " + ip_dest + ": bytes-32 time-37ms TTL=46" + "\n"
                    + "Reply from " + ip_dest + ": bytes-32 time-37ms TTL=46" + "\n\n"
                    + "Ping statistics for " + ip_dest + ":\n"
                            + "     Packets: Sent = 4, Recieved = 4, Lost = 0 (0% loss)");
                    //inalcanzable
                }else if(contIPdg != 0){
                    System.out.println("Reply from " + ip_dest + ": Destination host unreachable" + "\n"
                    + "Reply from " + ip_dest + ": Destination host unreachable" + "\n"
                    + "Reply from " + ip_dest + ": Destination host unreachable" + "\n"
                    + "Reply from " + ip_dest + ": Destination host unreachable" + "\n\n"
                    + "Ping statistics for " + ip_dest + ":\n"
                            + "     Packets: Sent = 4, Recieved = 0, Lost = 4 (100% loss)");
                }
                
            }
        }
        
        if (!exists){
            System.out.println("Request timed out\n"
                    + "Request timed out\n"
                    + "Request timed out\n"
                    + "Request timed out\n\n"
                    + "Ping statistics for " + ip_dest + ":\n"
                            + "     Packets: Sent = 4, Recieved = 0, Lost = 4 (100% loss)");
        }
    }
    
    public static int decAbin(int num) {
        if (num == 0) {
            return 0;
        } else {
            return (num % 2 + 10 * decAbin(num / 2));
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    public static boolean esNumero(String str) {
        for (char c : str.toCharArray()) {
            if (!Character.isDigit(c)) {
                return false;
            }
        }
        return true;
    }

    public static void showInfo() {
        System.out.println(currentPC);
    }
    
    public boolean validar(String num){
        boolean isValid = false;
        int puntos = 0;
        for (int i = 0; i < num.length(); i++) {
            char car = num.charAt(i);
            
            if(car == '.'){
                puntos ++;
            }
        }
        if(puntos == 3){
            isValid = true;
        }
        return isValid;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AgregarLaptop;
    private javax.swing.JButton agregarLaptop;
    private javax.swing.ButtonGroup almacenamiento;
    private javax.swing.JPanel bgPanel;
    private javax.swing.JButton btEliminar;
    private javax.swing.JCheckBox btGraphics;
    private javax.swing.JRadioButton btHDD;
    private javax.swing.JRadioButton btSSD;
    private javax.swing.JButton btagregarEsc;
    private javax.swing.JButton btcrud;
    private javax.swing.JButton btingresar;
    private javax.swing.JButton btingrese;
    private javax.swing.JButton crudSalir;
    private javax.swing.JFrame frameCrud;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFrame jfIngresarPC;
    private javax.swing.JPanel jpAgregarEsc;
    private javax.swing.JPanel jpEliminar;
    private javax.swing.JPanel jpIngresar;
    private javax.swing.JPanel jpListar;
    private javax.swing.JPanel jpcrud;
    private javax.swing.JTextField jtEliminar;
    private javax.swing.JTextField jtIP;
    private javax.swing.JTextField jtIP2;
    private javax.swing.JTextField jtPCIP;
    private javax.swing.JTextField jtcapalm;
    private javax.swing.JTextField jtdefinicion;
    private javax.swing.JTextField jthostname;
    private javax.swing.JTextField jthostname2;
    private javax.swing.JTextField jtmarca;
    private javax.swing.JTextField jtmask;
    private javax.swing.JTextField jtmask2;
    private javax.swing.JTextField jtram;
    private javax.swing.JTextArea listPC;
    private javax.swing.JCheckBox rgbbox;
    private javax.swing.JTabbedPane tabs;
    // End of variables declaration//GEN-END:variables
    ArrayList<PC> computadoras = new ArrayList();
}
